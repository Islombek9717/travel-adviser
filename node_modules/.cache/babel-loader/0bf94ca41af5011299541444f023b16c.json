{"ast":null,"code":"import axios from \"axios\";\nconst URL = \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\nconst options = {\n  params: {\n    bl_latitude: \"11.847676\",\n    tr_latitude: \"12.838442\",\n    bl_longitude: \"109.095887\",\n    tr_longitude: \"109.149359\"\n  },\n  headers: {\n    \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\n    \"x-rapidapi-key\": \"26160fa9c2msh714175ba676e9c6p18c490jsn10abdba15b39\"\n  }\n};\nexport const getPlacesData = async (sw, ne) => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await axios.get(URL, options);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Islombek/Desktop/apiProjects/travel_advisor/src/api/index.js"],"names":["axios","URL","options","params","bl_latitude","tr_latitude","bl_longitude","tr_longitude","headers","getPlacesData","sw","ne","data","get","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GACP,oEADF;AAGA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE,WADP;AAENC,IAAAA,WAAW,EAAE,WAFP;AAGNC,IAAAA,YAAY,EAAE,YAHR;AAINC,IAAAA,YAAY,EAAE;AAJR,GADM;AAOdC,EAAAA,OAAO,EAAE;AACP,uBAAmB,+BADZ;AAEP,sBAAkB;AAFX;AAPK,CAAhB;AAaA,OAAO,MAAMC,aAAa,GAAG,OAAOC,EAAP,EAAWC,EAAX,KAAkB;AAC7C,MAAI;AACF,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMZ,KAAK,CAACa,GAAN,CAAUZ,GAAV,EAAeC,OAAf,CAFV;AAGA,WAAOU,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL =\r\n  \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\r\n\r\nconst options = {\r\n  params: {\r\n    bl_latitude: \"11.847676\",\r\n    tr_latitude: \"12.838442\",\r\n    bl_longitude: \"109.095887\",\r\n    tr_longitude: \"109.149359\",\r\n  },\r\n  headers: {\r\n    \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\r\n    \"x-rapidapi-key\": \"26160fa9c2msh714175ba676e9c6p18c490jsn10abdba15b39\",\r\n  },\r\n};\r\n\r\nexport const getPlacesData = async (sw, ne) => {\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(URL, options);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}